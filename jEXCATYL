#!/bin/bash
clear

echo -e "\e[1;36m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\e[0m"
echo -e " 🚀 Starting Automated JexCatyl Installer By Para"
echo -e "\e[1;36m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\e[0m"
echo ""

read -p "🌐 Enter your domain (example: panel.example.com): " DOMAIN

# --- Dependencies ---
echo -e "\n📦 Installing required dependencies..."
apt update && apt install -y curl apt-transport-https ca-certificates gnupg unzip git tar sudo lsb-release software-properties-common

# Detect OS
OS=$(lsb_release -is | tr '[:upper:]' '[:lower:]')

if [[ "$OS" == "ubuntu" ]]; then
    echo -e "🟢 Ubuntu detected → Adding Ondřej Surý PHP PPA..."
    LC_ALL=C.UTF-8 add-apt-repository -y ppa:ondrej/php
elif [[ "$OS" == "debian" ]]; then
    echo -e "🟢 Debian detected → Adding SURY PHP repo..."
    curl -fsSL https://packages.sury.org/php/apt.gpg | gpg --dearmor -o /usr/share/keyrings/sury-php.gpg
    echo "deb [signed-by=/usr/share/keyrings/sury-php.gpg] https://packages.sury.org/php/ $(lsb_release -cs) main" | tee /etc/apt/sources.list.d/sury-php.list
fi

# Add Redis Repo
echo -e "🟥 Setting up Redis repository..."
curl -fsSL https://packages.redis.io/gpg | gpg --dearmor -o /usr/share/keyrings/redis-archive-keyring.gpg
echo "deb [signed-by=/usr/share/keyrings/redis-archive-keyring.gpg] https://packages.redis.io/deb $(lsb_release -cs) main" | tee /etc/apt/sources.list.d/redis.list

apt update

# --- Install PHP, MariaDB, Redis, Nginx ---
echo -e "🛠 Installing PHP 8.3, MariaDB, Nginx, and Redis..."
apt install -y php8.3 php8.3-{cli,fpm,common,mysql,mbstring,bcmath,xml,zip,curl,gd,tokenizer,ctype,simplexml,dom} mariadb-server nginx redis-server

# --- Composer ---
echo -e "🎼 Installing Composer..."
curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

# --- JexCatyl Panel ---
echo -e "📥 Downloading JexCatyl Panel..."
mkdir -p /var/www/jexcatyl
cd /var/www/jexcatyl
curl -Lo panel.tar.gz https://github.com/jexcatyl/panel/releases/latest/download/panel.tar.gz
tar -xzvf panel.tar.gz
chmod -R 755 storage/* bootstrap/cache/

# --- MariaDB Setup ---
echo -e "🗄 Configuring MariaDB database..."
DB_NAME=jexcatyl
DB_USER=jexcatyl
DB_PASS="YourStrongPassword123"
mariadb -e "CREATE USER '${DB_USER}'@'127.0.0.1' IDENTIFIED BY '${DB_PASS}';"
mariadb -e "CREATE DATABASE ${DB_NAME};"
mariadb -e "GRANT ALL PRIVILEGES ON ${DB_NAME}.* TO '${DB_USER}'@'127.0.0.1' WITH GRANT OPTION;"
mariadb -e "FLUSH PRIVILEGES;"

# --- Environment Setup ---
if [ ! -f ".env.example" ]; then
    curl -Lo .env.example https://raw.githubusercontent.com/jexcatyl/panel/develop/.env.example
fi
cp .env.example .env
sed -i "s|APP_URL=.*|APP_URL=https://${DOMAIN}|g" .env
sed -i "s|DB_DATABASE=.*|DB_DATABASE=${DB_NAME}|g" .env
sed -i "s|DB_USERNAME=.*|DB_USERNAME=${DB_USER}|g" .env
sed -i "s|DB_PASSWORD=.*|DB_PASSWORD=${DB_PASS}|g" .env

# --- Composer Install ---
echo -e "📦 Installing PHP dependencies..."
COMPOSER_ALLOW_SUPERUSER=1 composer install --no-dev --optimize-autoloader

# --- Laravel Setup ---
echo -e "🔑 Generating Laravel application key..."
php artisan key:generate --force

echo -e "📂 Running migrations and seeding..."
php artisan migrate --seed --force

# --- Permissions ---
echo -e "🔒 Setting permissions..."
chown -R www-data:www-data /var/www/jexcatyl/*
apt install -y cron
systemctl enable --now cron
(crontab -l 2>/dev/null; echo "* * * * * php /var/www/jexcatyl/artisan schedule:run >> /dev/null 2>&1") | crontab -

# --- Nginx Setup ---
echo -e "🌍 Configuring Nginx..."
mkdir -p /etc/certs/jexcatyl
cd /etc/certs/jexcatyl
openssl req -new -newkey rsa:4096 -days 3650 -nodes -x509 \
-subj "/C=NA/ST=NA/L=NA/O=NA/CN=Generic SSL Certificate" \
-keyout privkey.pem -out fullchain.pem

tee /etc/nginx/sites-available/jexcatyl.conf > /dev/null << EOF
server {
    listen 80;
    server_name ${DOMAIN};
    return 301 https://\$server_name\$request_uri;
}

server {
    listen 443 ssl http2;
    server_name ${DOMAIN};

    root /var/www/jexcatyl/public;
    index index.php;

    ssl_certificate /etc/certs/jexcatyl/fullchain.pem;
    ssl_certificate_key /etc/certs/jexcatyl/privkey.pem;

    client_max_body_size 100m;
    client_body_timeout 120s;
    sendfile off;

    location / {
        try_files \$uri \$uri/ /index.php?\$query_string;
    }

    location ~ \.php\$ {
        fastcgi_split_path_info ^(.+\.php)(/.+)\$;
        fastcgi_pass unix:/run/php/php8.3-fpm.sock;
        fastcgi_index index.php;
        include /etc/nginx/fastcgi_params;
        fastcgi_param PHP_VALUE "upload_max_filesize=100M \n post_max_size=100M";
        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;
    }

    location ~ /\.ht {
        deny all;
    }
}
EOF

ln -s /etc/nginx/sites-available/jexcatyl.conf /etc/nginx/sites-enabled/jexcatyl.conf || true
nginx -t && systemctl restart nginx

# --- Queue Worker ---
echo -e "⚡ Setting up JexCatyl queue worker..."
tee /etc/systemd/system/jexq.service > /dev/null << 'EOF'
[Unit]
Description=JexCatyl Queue Worker
After=redis-server.service

[Service]
User=www-data
Group=www-data
Restart=always
ExecStart=/usr/bin/php /var/www/jexcatyl/artisan queue:work --queue=high,standard,low --sleep=3 --tries=3
RestartSec=5s

[Install]
WantedBy=multi-user.target
EOF

systemctl daemon-reload
systemctl enable --now redis-server
systemctl enable --now jexq.service

# --- Admin User Creation ---
cd /var/www/jexcatyl
php artisan p:user:make 

# --- Final Output ---
clear
echo -e "\n\e[1;32m✅ JexCatyl Panel Installation Finished!\e[0m\n"
echo -e "\e[1;33m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\e[0m"
echo -e " 🌐 Panel URL:        \e[1;37mhttps://${DOMAIN}\e[0m"
echo -e " 📂 Installation Dir: \e[1;37m/var/www/jexcatyl\e[0m"
echo -e " 👤 Create Admin:     \e[1;37mphp artisan p:user:make\e[0m"
echo -e " 🔑 DB Username:      \e[1;37m${DB_USER}\e[0m"
echo -e " 🔑 DB Password:      \e[1;37m${DB_PASS}\e[0m"
echo -e "\e[1;33m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\e[0m"
echo -e " 🎉 Enjoy managing your JexCatyl Panel! 🚀"
